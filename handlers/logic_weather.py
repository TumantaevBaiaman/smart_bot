
import aiohttp
from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text

from bot import bot
from config import API_KEY_WEATHER, WEATHER_API_URL
from aiogram.dispatcher.filters.state import StatesGroup, State


class StateWeather(StatesGroup):
    city = State()


async def start_weather(message: types.Message):
    await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç, —É–∫–∞–∂–∏ –≥–æ—Ä–æ–¥')
    await StateWeather.city.set()


async def get_weather(message: types.Message, state: StateWeather):
    city = message.text
    api_key = API_KEY_WEATHER
    url = WEATHER_API_URL.format(city=city, api_key=api_key)

    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(url) as response:
                weather_data = await response.json()
                weather_main = weather_data['weather'][0]['main']
                weather_description = weather_data['weather'][0]['description']
                temp = weather_data['main']['temp']
                await bot.send_message(message.from_user.id, f'–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –≤ {city}:\n{weather_main}, {weather_description}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C')
                await state.finish()
        except:
            await bot.send_message(message.from_user.id, '–£–≤—ã, –í—ã –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.')
            await StateWeather.city.set()


def register_weather(dp : Dispatcher):
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ä–æ—Å–∞
    dp.register_message_handler(start_weather, Text(equals='üåç—É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', ignore_case=True))
    dp.register_message_handler(get_weather, state=StateWeather.city)