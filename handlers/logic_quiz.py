from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.types import Message, Poll, PollOption
from aiogram.utils import executor
from bot import bot
from aiogram.dispatcher.filters.state import StatesGroup, State

from key.button_menu import menu_info
from key.button_quiz import quiz_btn


class StateQuiz(StatesGroup):
    question = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –º—ã –∂–¥–µ–º –≤–æ–ø—Ä–æ—Å –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ–ø—Ä–æ—Å–∞
    answers = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –º—ã –∂–¥–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å
    group = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –º—ã –∂–¥–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –æ–ø—Ä–æ—Å


async def start_quiz(message: types.Message):
    await bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ–ø—Ä–æ—Å–∞')
    await StateQuiz.question.set()  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞ "question"


async def get_question(message: types.Message, state=StateQuiz):
    question = message.text
    async with state.proxy() as data:
        data['question'] = question  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ —Å–ª–æ–≤–∞—Ä—å "data"
        await bot.send_message(message.from_user.id, '–î–æ–±–∞–≤–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å')
        await StateQuiz.answers.set()  # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "answers"


async def get_answer(message: types.Message, state=StateQuiz):
    answer = message.text
    if answer != '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É':  # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥—Ä—É–ø–ø–µ
        async with state.proxy() as data:
            answers = data.get('answers', [])  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –∏–∑ —Å–ª–æ–≤–∞—Ä—è "data"
            answers.append(answer)  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –æ—Ç–≤–µ—Ç –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤
            data['answers'] = answers  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä—å "data"
        await message.answer(f'–í–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ "{answer}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫. –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:', reply_markup=quiz_btn)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø—Ä–æ—Å–æ–º
    else:  # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥—Ä—É–ø–ø–µ
        async with state.proxy() as data:
            if len(data["answers"])>=2:  # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ –º–µ–Ω–µ–µ –¥–≤—É—Ö –æ—Ç–≤–µ—Ç–æ–≤
                await message.answer(f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ @–Ω–∞–∑–≤–∞–Ω–∏–µ_–≥—Ä—É–ø–ø—ã')
                await StateQuiz.group.set()  # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "group"
            else:  # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–Ω–µ–µ –¥–≤—É—Ö –æ—Ç–≤–µ—Ç–æ–≤
                await message.answer(f'–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à –≤—ã–±–æ—Ä —Å–ª–∏—à–∫–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å –æ–ø—Ä–æ—Å.')


async def send_group(message: types.Message, state=StateQuiz):
    group = message.text

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø—Ä–æ—Å–∞
    try:
        async with state.proxy() as data:
            # –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            poll = types.Poll(
                type=types.PollType.REGULAR,
                question=data["question"],  # –≤–æ–ø—Ä–æ—Å –æ–ø—Ä–æ—Å–∞
                options=data["answers"],  # –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
            )
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–ø—Ä–æ—Å–∞ –≤ –≥—Ä—É–ø–ø—É
            await message.answer(f'–û–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≥—Ä—É–ø–ø—É {group}')
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø—Ä–æ—Å–∞ –≤ –≥—Ä—É–ø–ø—É
            await bot.send_poll(group, question=poll.question, options=poll.options, type=poll.type)
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–ø—Ä–æ—Å–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
            await message.answer(f'–û—Ç–ª–∏—á–Ω–æ', reply_markup=menu_info)
            # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            await state.finish()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
    except:
        await message.answer(f'–û—à–∏–±–∫–∞, –ø—Ä–∏—á–∏–Ω—ã\n1)–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ '
                             f'–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞ –≤ –º–µ—Ç–æ–¥–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É. '
                             f'–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã —É–∫–∞–∑–∞–Ω –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.\n2)–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —É–∫–∞–∑–∞–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏ —á—Ç–æ –±–æ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥—Ä—É–ø–ø—ã, '
                             f'–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–∫–∞–∑–∞—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã –≤–º–µ—Å—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏—è.\n3)–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≥—Ä—É–ø–ø–∞. –ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –µ—â–µ —Ä–∞–∑.\n4)'
                             f'–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à –±–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ. –ï—Å–ª–∏ —É –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø—Ä–∞–≤, –æ–Ω –Ω–µ —Å–º–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–µ.\n'
                             f'–ï—Å–ª–∏ –≤—ã –≤—Å–µ –µ—â–µ –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –±–æ—Ç–∞, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏.',
                             reply_markup=None)
        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
        await StateQuiz.group.set()


def register_quiz(dp : Dispatcher):
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ä–æ—Å–∞
    dp.register_message_handler(start_quiz, Text(equals='üìÑ—Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–ø—Ä–æ—Å—ã', ignore_case=True))
    dp.register_message_handler(get_question, state=StateQuiz.question)
    dp.register_message_handler(get_answer, state=StateQuiz.answers)
    dp.register_message_handler(send_group, state=StateQuiz.group)